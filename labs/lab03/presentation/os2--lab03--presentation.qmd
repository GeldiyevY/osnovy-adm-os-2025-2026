---
# Preamble

## Author
author:
  name: Гелдиев Ыхлас
  degrees: DSc
  orcid: 0000-0002-0877-7063
  email: 1032249184@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: Презентация по Лабораторной работе №3
subtitle: Гелдиев Ыхлас
license: CC BY
date: 2025-09-20
## Generic options
lang: ru-RU
crossref:
  lof-title: Список иллюстраций
  lot-title: Список таблиц
  lol-title: Листинги
## Formats
format:
  ### Pdf output format
  beamer:
    include-in-header:
      text: |
        \usepackage{fontspec}
        \setmainfont{Noto Serif}
        \setsansfont{Noto Sans}
    toc: true
    toc-title: Содержание
    number-sections: true
    colorlinks: false
    toc-depth: 2
    slide_level: 2
    aspectratio: 169
    section-titles: true
    theme: metropolis
    themeoptions: progressbar=frametitle,sectionpage=progressbar,numbering=fraction
    #### Language
    babel-lang: russian
    babel-otherlangs: english
  ### Html output
  revealjs:
    transition: slide
    margin: 0.2
    smaller: false
    output-ext: html
    theme: beige
    logo: _resources/image/logo_rudn.png
---

# Информация

## Докладчик

- Гелдиев Ыхлас
- студент
- Российский университет дружбы народов им. П. Лумумбы
- [1032249184@pfur.ru](mailto:1032249184@pfur.ru)
- <https://geldiyevy.github.io/ru/>

## Цель работы

Получение навыков настройки базовых и специальных прав доступа для групп пользователей в операционной системе типа Linux.

## Задание

1. Прочитайте справочное описание man по командам chgrp, chmod, getfacl, setfacl.
2. Выполните действия по управлению базовыми разрешениями для групп пользователей (раздел 3.3.1).
3. Выполните действия по управлению специальными разрешениями для групп пользователей (раздел 3.3.2).
4. Выполните действия по управлению расширенными разрешениями с использованием списков ACL для групп пользователей (раздел 3.3.3).

# Выполнение лабораторной работы

## Прочитайте справочное описание man по командам chgrp, chmod, getfacl, setfacl.

![`mans`](image/mans.png)

# Управление базовыми разрешениями

## Откройте терминал с учётной записью root: ([рис. @fig-001])

`su -`

В корневом каталоге создайте каталоги /data/main и /data/third: `mkdir -p /data/main /data/third`. Посмотрите, кто является владельцем этих каталогов. Для этого используйте: `ls -Al /data` ([рис. @fig-001])

## Прежде чем устанавливать разрешения, измените владельцев этих каталогов с root на main и third соответственно: ([рис. @fig-001])

`chgrp main /data/main`
`chgrp third /data/third`

Посмотрите, кто теперь является владельцем этих каталогов: ([рис. @fig-001])
`ls -Al /data`

## Установите разрешения, позволяющие владельцам каталогов записывать файлы в эти каталоги и запрещающие доступ к содержимому каталогов всем другим пользователям и группам: ([рис. @fig-001])

`chmod 770 /data/main`
`chmod 770 /data/third`

Проверьте установленные права доступа. ([рис. @fig-001])

##

![Устанавливаю расширения](image/setting_permissions.png){#fig-001}

## В другом терминале перейдите под учётную запись пользователя bob: ([рис. @fig-002])

`su - bob`

## Под пользователем bob попробуйте перейти в каталог /data/main и создать файл `emptyfile` в этом каталоге: ([рис. @fig-002])

`cd /data/main`
`touch emptyfile`
`ls -Al`

## Опишите и поясните результат этого действия.

Команда ls выводит список файлов и каталогов в текущем каталоге. Ключи изменяют формат вывода:

- -A – показывает почти все файлы, исключая . (текущий каталог) и .. (родительский каталог). При этом отображаются скрытые файлы (имена которых начинаются с точки).
- -l – выводит подробный "длинный" список, где для каждого элемента показываются права доступа, количество жёстких ссылок, владелец, группа, размер, время последней модификации и имя.

## Под пользователем bob попробуйте перейти в каталог /data/third и создать файл emptyfile в этом каталоге. ([рис. @fig-002])

![Создаем файлы под пользователем bob](image/bob_emptyfile.png){#fig-002}

## Опишите и поясните результат этого действия.

- Команда cd /data/third не смогла перейти в каталог, потому что у текущего пользователя нет прав доступа (чтения/исполнения) к /data/third. Это приводит к ошибке Permission denied.

# Управление специальными разрешениями

## Откройте новый терминал под пользователем alice.

![`su - alice`](image/su_alice.png)

## Перейдите в каталог /data/main:

`cd /data/main`
Создайте два файла, владельцем которых является alice:
`touch alice1`
`touch alice2`

##

![Создаем файлы](image/alice_touch.png)

## В другом терминале перейдите под учётную запись пользователя bob (пользователь bob является членом группы main, как и alice): ([рис. @fig-003])

`su - bob`

## Перейдите в каталог /data/main: ([рис. @fig-003])

`cd /data/main`
и в этом каталоге введите: ([рис. @fig-003])
`ls -l`

## Вы увидите два файла, созданные пользователем alice. Попробуйте удалить файлы, принадлежащие пользователю alice: ([рис. @fig-003])

`rm -f alice*`

Убедитесь, что файлы были удалены пользователем bob. ([рис. @fig-003])

## Создайте два файла, которые принадлежат пользователю bob: ([рис. @fig-003])

`touch bob1`
`touch bob2`

![Удаляем и создаем файлы как bob](image/bob_removing_alice.png){#fig-003}

## В терминале под пользователем root установите для каталога /data/main бит идентификатора группы, а также stiky-бит для разделяемого (общего) каталога группы:

`chmod g+s,o+t /data/main`

![`chmod g+s,o+t /data/main`](image/chmod.png)

## В терминале под пользователем alice создайте в каталоге /data/main файлы alice3 и alice4:

`touch alice3`
`touch alice4`
`ls -l`

Теперь вы должны увидеть, что два созданных вами файла принадлежат группе main, которая является группой-владельцем каталога /data/main.

## В терминале под пользователем alice попробуйте удалить файлы, принадлежащие пользователю bob:

`rm -rf bob*`

![Создаем и пытаемся удалить как alice](image/alice_touch_and_rm.png)

##

Убедитесь, что sticky-bit предотвратит удаление этих файлов пользователем alice, поскольку этот пользователь не является владельцем этих файлов. Обратите внимание: поскольку пользователь alice является владельцем каталога /data/main, то он может удалить все свои файлы в любом случае.

# Управление расширенными разрешениями с использованием списков ACL

## Откройте терминал с учётной записью root: ([рис. @fig-004])

`su -`

## Установите права на чтение и выполнение в каталоге /data/main для группы third и права на чтение и выполнение для группы main в каталоге /data/third: ([рис. @fig-004])

`setfacl -m g:third:rx /data/main`
`setfacl -m g:main:rx /data/third`

## Используйте команду getfacl, чтобы убедиться в правильности установки разрешений: ([рис. @fig-004])

`getfacl /data/main`
`getfacl /data/third`

![Установка прав](image/setfacl.png){#fig-004}

## Создайте новый файл с именем newfile1 в каталоге /data/main:

`touch /data/main/newfile1`
Используйте `getfacl /data/main/newfile1` для проверки текущих назначений полномочий.

Какие права доступа у этого файла?
"Права доступа для этого файла rw-r--r--"

Объясните, почему.
"setfacl -m g:third:rx /data/main добавила ACL‑право rx (чтение + исполнение) для группы third на каталог /data/main. При создании нового файла (touch) в каталоге применяются наследуемые ACL из каталога‑родителя. Для файлов наследуется только право r (чтение) из rx, потому что исполнение (x) имеет смысл только для каталогов. Поэтому новому файлу автоматически присваивается ACL‑право r группе third"

Выполните аналогичные действия для каталога /data/third. Дайте пояснения.

##

![Новый файл и проверка полномочий](image/newfile1.png)

## Установите ACL по умолчанию для каталога /data/main: ([рис. @fig-005])

`setfacl -m d:g:third:rwx /data/main`

## Добавьте ACL по умолчанию для каталога /data/third: ([рис. @fig-005])

`setfacl -m d:g:main:rwx /data/third`

## Убедитесь, что настройки ACL работают, добавив новый файл в каталог /data/main: ([рис. @fig-005])

`touch /data/main/newfile2`

Используйте
`getfacl /data/main/newfile2`
для проверки текущих назначений полномочий.

Выполните аналогичные действия для каталога /data/third ([рис. @fig-005])

##

![Добавляем ACL](image/correct_setfacl.png){#fig-005}

## Для проверки полномочий группы third в каталоге /data/third войдите в другом терминале под учётной записью члена группы third:

`su - carol`

![`su - carol`](image/su_carol.png)

Проверьте операции с файлами:
`rm /data/main/newfile1`
`rm /data/main/newfile2`

Проверьте, возможно ли осуществить запись в файл:
`echo "Hello, world" >> /data/main/newfile1`
`echo "Hello, world" >> /data/main/newfile2`

##

![Выполнение операций](image/carol_console.png)

## Объясните результат произведённых действий.

Мы не можем удалить файлы newfile1 и newfile2 из-за того, что нам не хватает прав для пользователя carol.
При этом мы можем записать данные в /data/main/newfile2

# Контрольные вопросы

## Как следует использовать команду chown, чтобы установить владельца группы для файла? Приведите пример.

`chown :groupname file` – меняет только группу файла.
Пример: `chown :developers myscript.sh`

## С помощью какой команды можно найти все файлы, принадлежащие конкретному пользователю? Приведите пример.

`find /path -user username` – ищет файлы, принадлежащие указанному пользователю.
Пример: `find /home -user alice`

## Как применить разрешения на чтение, запись и выполнение для всех файлов в каталоге /data для пользователей и владельцев групп, не устанавливая никаких прав для других? Приведите пример.

`chmod 770 /*` – права rwx для владельца и группы, без прав для остальных.
Пример: `chmod 770 /data/*`

## Какая команда позволяет добавить разрешение на выполнение для файла, который необходимо сделать исполняемым?

`chmod +x filename` – добавляет право выполнения.

## Какая команда позволяет убедиться, что групповые разрешения для всех новых файлов, создаваемых в каталоге, будут присвоены владельцу группы этого каталога? Приведите пример.

`chmod g+s /directory` – устанавливает SGID‑бит, новые файлы наследуют группу каталога.
Пример: `chmod g+s /projects`

## Необходимо, чтобы пользователи могли удалять только те файлы, владельцами которых они являются, или которые находятся в каталоге, владельцами которого они являются. С помощью какой команды можно это сделать? Приведите пример.

`chmod 700 /directory && chmod 600 /directory/*` – владельцы могут удалять свои файлы; остальные не имеют прав.
Пример: `chmod 700 /shared && chmod 600 /shared/*`

## Какая команда добавляет ACL, который предоставляет членам группы права доступа на чтение для всех существующих файлов в текущем каталоге?

`setfacl -m g:groupname:r current_dir/*` – добавляет ACL‑право чтения для группы ко всем файлам текущего каталога.

## Что нужно сделать для гарантии того, что члены группы получат разрешения на чтение для всех файлов в текущем каталоге и во всех его подкаталогах, а также для всех файлов, которые будут созданы в этом каталоге в будущем? Приведите пример.

Установить рекурсивный ACL с наследованием: `setfacl -R -m d:g:groupname:rx,g:groupname:rx .`

## Какое значение umask нужно установить, чтобы «другие» пользователи не получали какие-либо разрешения на новые файлы? Приведите пример.

`umask 022` – запрещает любые права для «других» (others) при создании новых файлов.
Пример: `umask 022`

## Выводы

Я получил навыки настройки базовых и специальных прав доступа для групп пользователей в операционной системе типа Linux.

---
# Preamble

## Author
author:
  name: Гелдиев Ыхлас
  degrees: DSc
  orcid: 0000-0002-0877-7063
  email: 1032249184@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: Лабораторная работа №5
subtitle: Управление системными службами
license: CC BY
date: 2025-10-04
## Generic options
lang: ru-RU
crossref:
  lof-title: Список иллюстраций
  lot-title: Список таблиц
  lol-title: Листинги
## Formats
format:
  ### Pdf output format
  beamer:
    include-in-header:
      text: |
        \usepackage{fontspec}
        \setmainfont{Noto Serif}
        \setsansfont{Noto Sans}
    toc: true
    toc-title: Содержание
    number-sections: true
    colorlinks: false
    toc-depth: 2
    slide_level: 2
    aspectratio: 169
    section-titles: true
    theme: metropolis
    themeoptions: progressbar=frametitle,sectionpage=progressbar,numbering=fraction
    #### Language
    babel-lang: russian
    babel-otherlangs: english
  ### Html output
  revealjs:
    transition: slide
    margin: 0.2
    smaller: false
    output-ext: html
    theme: beige
    logo: _resources/image/logo_rudn.png
---

# Информация

## Докладчик

- Гелдиев Ыхлас
- студент
- Российский университет дружбы народов им. П. Лумумбы
- [1032249184@pfur.ru](mailto:1032249184@pfur.ru)
- <https://geldiyevy.github.io/ru/>

## Цель работы

Получить навыки управления системными службами операционной системы посредством systemd.

## Задание

1. Выполните основные операции по запуску (останову), определению статуса, добавлению (удалению) в автозапуск и пр. службы Very Secure FTP (раздел 5.4.1).
2. Продемонстрируйте навыки по разрешению конфликтов юнитов для служб firewalld и iptables (раздел 5.4.2).
3. Продемонстрируйте навыки работы с изолированными целями (разделы 5.4.3, 5.4.4).

# Выполнение лабораторной работы

# Управление сервисами

## Получите полномочия администратора

`su -`

![`su -`](image/su.png)

## Проверьте статус службы Very Secure FTP: ([рис. @fig-001])

`systemctl status vsftpd`

Вывод команды должен показать, что сервис в настоящее время отключён, так как
служба Very Secure FTP не установлена.

## Установите службу Very Secure FTP: ([рис. @fig-001])

`dnf -y install vsftpd`

![VSFTPD 1](image/vsftpd_1.png){#fig-001}

## Запустите службу Very Secure FTP: ([рис. @fig-002])

`systemctl start vsftpd`

## Проверьте статус службы Very Secure FTP: ([рис. @fig-002])

`systemctl status vsftpd`

Вывод команды должен показать, что служба в настоящее время работает, но не будет
активирована при перезапуске операционной системы.

##

![VSFTPD 2](image/vsftpd_2.png){#fig-002}

## Добавьте службу Very Secure FTP в автозапуск при загрузке операционной системы, используя команду `systemctl enable`. Затем проверьте статус службы. Удалите службу из автозапуска, используя команду `systemctl disable`, и снова проверьте её статус.

![VSFTPD 3](image/vsftpd_3.png)

## Выведите на экран символические ссылки, ответственные за запуск различных сервисов: ([рис. @fig-003])

`ls /etc/systemd/system/multi-user.target.wants`
Должно отобразиться, что ссылка на `vsftpd.service` не существует.

## Снова добавьте службу Very Secure FTP в автозапуск: ([рис. @fig-003])

`systemctl enable vsftpd`
и выведите на экран символические ссылки, ответственные за запуск различных
сервисов.

Вывод команды покажет, что создана символическая ссылка для
файла `/usr/lib/systemd/system/vsftpd.service` в каталоге
`/etc/systemd/system/multi-user.target.wants`.

## Снова проверьте статус службы Very Secure FTP: ([рис. @fig-003])

`systemctl status vsftpd`
Теперь вы увидите, что для файла юнита состояние изменено с `disabled` на `enabled`.

![VSFTPD 4](image/vsftpd_4.png){#fig-003}

## Выведите на экран список зависимостей юнита:

    `systemctl list-dependencies vsftpd`

    ![VSFTPD dependencies](image/vsftpd_dep.png)

## Выведите на экран список юнитов, которые зависят от данного юнита:

    `systemctl list-dependencies vsftpd --reverse`

    ![VSFTPD reverse dependensies](image/vsftpd_rev_dep.png)

# Конфликты юнитов

## Получите полномочия администратора. Установите iptables:

`dnf -y install iptables\*`

![`dnf -y install iptables*`](image/iptables_install.png)

## Проверьте статус firewalld и iptables: ([рис. @fig-004])

`systemctl status firewalld`
`systemctl status iptables`

## Попробуйте запустить firewalld и iptables: ([рис. @fig-004])

`systemctl start firewalld`
`systemctl start iptables`
Вы увидите, что при запуске одной службы вторая дезактивируется или не запускается.

##

![Conflicts 1](image/iptables_1.png){#fig-004}

## Введите: ([рис. @fig-005])

`cat /usr/lib/systemd/system/firewalld.service`
и опишите настройки конфликтов для этого юнита при наличии.

## Введите: ([рис. @fig-005])

`cat /usr/lib/systemd/system/iptables.service`
и опишите настройки конфликтов для этого юнита.

![Conflicts 2](image/iptables_2.png){#fig-005}

## Выгрузите службу iptables (на всякий случай, чтобы убедиться, что данная служба

не загружена в систему): ([рис. @fig-006])
`systemctl stop iptables`
и загрузите службу firewalld
`systemctl start firewalld`

## Заблокируйте запуск iptables, введя: ([рис. @fig-006])

`systemctl mask iptables`
Будет создана символическая ссылка на /dev/null для
/etc/systemd/system/iptables.service (проверьте это). Поскольку юнитфайлы в /etc/systemd имеют приоритет над файлами в /usr/lib/systemd, то это
сделает невозможным случайный запуск сервиса iptables.

## Попробуйте запустить iptables: ([рис. @fig-006])

`systemctl start iptables`
Должно появиться сообщение об ошибке, указывающее, что служба замаскирована
и по этой причине не может быть запущена.

## Попробуйте добавить iptables в автозапуск: ([рис. @fig-006])

`systemctl enable iptables`
Сервис будет неактивен, а статус загрузки отобразится как замаскированный.

![Conflicts 3](image/iptables_3.png){#fig-006}

# Изолируемые цели

## Получите полномочия администратора. Перейдите в каталог systemd и найдите список всех целей, которые можно изолировать: ([рис. @fig-007])

`cd /usr/lib/systemd/system`
`grep Isolate \*.target`

## Переключите операционную систему в режим восстановления: ([рис. @fig-007])

`systemctl isolate rescue.target`
При этом необходимо ввести пароль root на консоли сервера для входа в систему.

![Isolate 1](image/isolate_1.png){#fig-007}

## Перезапустите операционную систему следующим образом:

`systemctl isolate reboot.target`

![`systemctl isolate reboot.target`](image/isolate_2.png)

# Цель по умолчанию

## Получите полномочия администратора. Выведите на экран цель, установленную по

умолчанию: ([рис. @fig-008])
`systemctl get-default`

## Для установки цели по умолчанию используется команда:

`systemctl set-default`
Например, для запуска по умолчанию текстового режима введите: ([рис. @fig-008])
`systemctl set-default multi-user.target`
Перегрузите систему командой reboot. Убедитесь, что система загрузилась в текстовом режиме. Получите полномочия администратора. Для запуска по умолчанию графического режима введите:
`systemctl set-default graphical.target`
Вновь перегрузите систему командой reboot. Убедитесь, что система загрузилась в графическом режиме.

##

![Default 1](image/default_1.png){#fig-008}

##

![Default 2](image/default_2.png)

# Контрольные вопросы

## Что такое юнит (unit)? Приведите примеры.

- Юнит — это конфигурационный объект systemd (service, socket, target, mount и т.д.), например sshd.service, multi-user.target, dev-sda1.device.

## Какая команда позволяет вам убедиться, что цель больше не входит в список автоматического запуска при загрузке системы?

- systemctl disable <unit>

## Какую команду вы должны использовать для отображения всех сервисных юнитов, которые в настоящее время загружены?

- systemctl list-units --type=service --all

## Как создать потребность (wants) в сервисе?

- В юните другого сервиса добавить в секцию [Install] строку Wants=<your.service> или в единице создать symlink в .wants/; можно systemctl add-wants <target> <service>.

## Как переключить текущее состояние на цель восстановления (rescue target)?

- systemctl isolate rescue.target

## Поясните причину получения сообщения о том, что цель не может быть изолирована.

- Потому что другие активные юниты зависят от неё, или цель не допускает изоляции из-за зависимостей/состояния.

## Вы хотите отключить службу systemd, но, прежде чем сделать это, вы хотите узнать, какие другие юниты зависят от этой службы. Какую команду вы бы использовали?

- systemctl list-dependencies --reverse <service>

## Выводы

Я получил навыки управления системными службами операционной системы посредством systemd.
